{
    "swagger": "2.0",
    "info": {
        "title": "Delivery - GFF API.",
        "description": "API that manages Green Family Farm Delivery integrations.",
        "version": "1.0.0",
        "contact": {
            "name": "Bill Green"
        }
    },
    "host": "api.example.com",
    "basePath": "/gff/deliveries/v1",
    "schemes": [
        "https"
    ],
    "tags": [
        {
            "name": "delivery",
            "description": "Operations that involves delivery information."
        }
    ],
    "paths": {
        "/gff/stores/{storeId}/deliveries/{deliveryId}": {
            "patch": {
                "tags": [
                    "delivery"
                ],
                "summary": "Modify a delivery petition data.",
                "description": "Modify a delivery petition data by identifier.",
                "operationId": "patchDelivery",
                "parameters": [
                    {
                        "in": "path",
                        "name": "storeId",
                        "type": "number",
                        "description": "Store Identifier.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "deliveryId",
                        "type": "number",
                        "description": "Delivery Identifier.",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "data",
                        "description": "Requested data.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "deliveryModification"
                            ],
                            "properties": {
                                "deliveryModification": {
                                    "$ref": "#/definitions/DeliveryType"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource updated successfully.",
                        "schema": {
                            "$ref": "#/definitions/DeliveryType"
                        }
                    },
                    "202": {
                        "description": "Accepted."
                    },
                    "400": {
                        "description": "Bad request or functional error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorMng"
                        }
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "Forbidden."
                    },
                    "404": {
                        "description": "Not Found."
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorMng"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "delivery"
                ],
                "summary": "Delete a delivery related to a store.",
                "description": "Delete a delivery by store and delivery identifier.",
                "operationId": "deleteDelivery",
                "parameters": [
                    {
                        "$ref": "#/parameters/storeId"
                    },
                    {
                        "in": "path",
                        "name": "deliveryId",
                        "type": "number",
                        "description": "Delivery Identifier.",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "data",
                        "description": "Requested data.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "deliveryModification"
                            ],
                            "properties": {
                                "deliveryModification": {
                                    "$ref": "#/definitions/DeliveryType"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted."
                    },
                    "204": {
                        "description": "Entity deleted successfully."
                    },
                    "400": {
                        "description": "Bad Request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorMng"
                        }
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "Forbidden."
                    },
                    "404": {
                        "description": "Not found."
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorMng"
                        }
                    }
                }
            }
        },
        "/gff/stores/{storeId}/deliveries": {
            "post": {
                "tags": [
                    "delivery"
                ],
                "summary": "Create a new delivery from a store.",
                "description": "Create a new delivery service from a store by its identifier.",
                "operationId": "createDelivery",
                "parameters": [
                    {
                        "$ref": "#/parameters/storeId"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Entity created successfully."
                    },
                    "400": {
                        "description": "Bad Request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorMng"
                        }
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "Forbidden."
                    },
                    "404": {
                        "description": "Not found."
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorMng"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "DeliveryType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Delivery identifier."
                },
                "storeId": {
                    "type": "number",
                    "description": "Store identifier."
                },
                "clientId": {
                    "type": "number",
                    "description": "Delivery platform client identifier."
                },
                "fromDateDelivery": {
                    "type": "string",
                    "description": "Date and time when delivery starts.",
                    "format": "date-time"
                },
                "toDateDelivery": {
                    "type": "string",
                    "description": "Date and time when delivery has been finished.",
                    "format": "date-time"
                },
                "updatingDate": {
                    "type": "string",
                    "description": "Date and time of source update.",
                    "format": "date-time"
                }
            }
        },
        "ErrorMng": {
            "type": "object",
            "required": [
                "code",
                "description"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        }
    },
    "parameters": {
        "employeeId": {
            "in": "path",
            "name": "employeeId",
            "type": "number",
            "description": "Employee identifier.",
            "required": true
        },
        "storeId": {
            "in": "path",
            "name": "storeId",
            "type": "number",
            "description": "Store identifier.",
            "required": true
        }
    }
}